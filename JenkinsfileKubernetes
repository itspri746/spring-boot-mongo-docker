node{
     
    stage('SCM Checkout'){
        git url:  'https://github.com/prakashk0301/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    stage(" Maven Clean Package")
    {
      def mavenHome =  tool name: "MAVEN_HOME", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "mvn clean package"
      
    } 
    
    
    
    
   // stage ('publish artifact to jrog repo')
   // { steps {  } }
    
    
    stage('Build Docker Image'){
        sh 'docker rmi -f pri746d/spring-boot-mongo'
        sh 'docker build -t pri746d/spring-boot-mongo .'
    }
    

   
    stage ('push docker image to ACr/Dcokerhub')
    { 	withDockerRegistry(credentialsId: 'DockerHubCredentialsNew', url: 'https://index.docker.io/v1/') {
   	sh 'docker push pri746d/spring-boot-mongo'
} }
     
     
     stage("Deploy To Kuberates Cluster"){
  kubernetesDeploy configs: 'springBootMongo.yml', kubeConfig: [path: ''], kubeconfigId: 'KUBERNETES_CLUSTER_CONFIG', secretName: '', ssh: [sshCredentialsId: '*', sshServer: ''], textCredentials: [certificateAuthorityData: '', clientCertificateData: '', clientKeyData: '', serverUrl: 'https://']
     }
	 
    
//}
}


